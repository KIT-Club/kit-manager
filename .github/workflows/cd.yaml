name: CD
# run-name: "CD #${{ github.run_number }} (${{github.sha}})"

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    env:
      PTP: ${{ secrets.PATH_TO_PROJECT }}
      TMP_PTP: ${{ secrets.PATH_TO_PROJECT }}_tmp
      ZIP_FILE: ${{ github.event.repository.name }}.zip
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --force

      - name: Build code
        run: npm run build && npm run export
        env:
          NODE_ENV: production
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
          NEXT_PUBLIC_API_BASE_URL: ${{ secrets.API_BASE_URL }}

      - name: Zip code
        run: cd out && zip -qr $ZIP_FILE . && mv $ZIP_FILE ~

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/server
          chmod 600 ~/.ssh/server
          cat > ~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USERNAME
            IdentityFile ~/.ssh/server
            PubkeyAuthentication yes
            ChallengeResponseAuthentication no
            PasswordAuthentication no
            StrictHostKeyChecking no
          END
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Upload code
        run: scp ~/$ZIP_FILE ${{ secrets.SSH_USERNAME }}@server:~

      - name: Migrate & upgrade server
        run: |
          ssh server <<END
          source .bashrc
          unzip -qo ~/$ZIP_FILE -d $TMP_PTP
          mv $PTP/.htaccess $TMP_PTP/.htaccess
          rm -rf $PTP ~/$ZIP_FILE
          mv $TMP_PTP $PTP
          END
